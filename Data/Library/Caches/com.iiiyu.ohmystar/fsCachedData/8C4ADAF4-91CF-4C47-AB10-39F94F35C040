<div class="announce instapaper_body md" data-path="README.md" id="readme"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-yucihighpassskinsmoothing" class="anchor" href="#yucihighpassskinsmoothing" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>YUCIHighPassSkinSmoothing</h1>

<p><a href="https://camo.githubusercontent.com/f2dad882b6a9cf035db6fd4c1086a9f1eb34d4ad/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" target="_blank"><img src="https://camo.githubusercontent.com/f2dad882b6a9cf035db6fd4c1086a9f1eb34d4ad/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" alt="CocoaPods Platform" data-canonical-src="https://img.shields.io/cocoapods/p/YUCIHighPassSkinSmoothing.svg?style=flat-square" style="max-width:100%;"></a>
<a href="https://camo.githubusercontent.com/14406b690c8d97c72490bb18234201064ed29467/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" target="_blank"><img src="https://camo.githubusercontent.com/14406b690c8d97c72490bb18234201064ed29467/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" alt="CocoaPods Version" data-canonical-src="https://img.shields.io/cocoapods/v/YUCIHighPassSkinSmoothing.svg?style=flat-square" style="max-width:100%;"></a>
<a href="https://camo.githubusercontent.com/7e874ade22963a50dd8f57c90d8460aef48ac7a7/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" target="_blank"><img src="https://camo.githubusercontent.com/7e874ade22963a50dd8f57c90d8460aef48ac7a7/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f595543494869676850617373536b696e536d6f6f7468696e672e7376673f7374796c653d666c61742d737175617265" alt="CocoaPods License" data-canonical-src="https://img.shields.io/cocoapods/l/YUCIHighPassSkinSmoothing.svg?style=flat-square" style="max-width:100%;"></a></p>

<p>An implementation of <a href="https://www.google.com/search?ie=UTF-8&amp;q=photoshop+high+pass+skin+smoothing">High Pass Skin Smoothing</a> using CoreImage.framework</p>

<p>Available on both OS X and iOS.</p>

<h2><a id="user-content-previews" class="anchor" href="#previews" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Previews</h2>

<p><a href="https://camo.githubusercontent.com/1b009f525c52b22822d43b56f0747d594652bf70/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f312e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/1b009f525c52b22822d43b56f0747d594652bf70/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f312e6a7067" alt="Preview 1" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/1.jpg" style="max-width:100%;"></a></p>

<p><a href="https://camo.githubusercontent.com/4ab4b06fea5209ec2c0ab39bdca0ad643a180514/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f322e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/4ab4b06fea5209ec2c0ab39bdca0ad643a180514/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f322e6a7067" alt="Preview 2" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/2.jpg" style="max-width:100%;"></a></p>

<p><a href="https://camo.githubusercontent.com/91bf95851bbe78f214e8aaec41eac752873383e3/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f332e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/91bf95851bbe78f214e8aaec41eac752873383e3/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f332e6a7067" alt="Preview 3" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/3.jpg" style="max-width:100%;"></a></p>

<p><a href="https://camo.githubusercontent.com/ab22577fc1b393007ef7913eb1e4c271adf4aae9/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f342e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/ab22577fc1b393007ef7913eb1e4c271adf4aae9/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f342e6a7067" alt="Preview 4" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/4.jpg" style="max-width:100%;"></a></p>

<p><a href="https://camo.githubusercontent.com/c9cabb5e49953b4a62bde944e806a33569263580/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f352e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/c9cabb5e49953b4a62bde944e806a33569263580/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f352e6a7067" alt="Preview 5" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/5.jpg" style="max-width:100%;"></a></p>

<p><a href="https://camo.githubusercontent.com/48b0369e47f27eb516f0fd9b956bdcfbd942faa4/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f362e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/48b0369e47f27eb516f0fd9b956bdcfbd942faa4/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f70726576696577732f362e6a7067" alt="Preview 6" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/previews/6.jpg" style="max-width:100%;"></a></p>

<h2><a id="user-content-performance" class="anchor" href="#performance" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Performance</h2>

<p>Tests are made in Instruments with the "OpenGL ES Analysis" template.</p>

<p>The <code>CIContext</code> object is created with <code>EAGLContext</code> and a sRGB working color space (<code>CGColorSpaceCreateDeviceRGB()</code>).</p>

<pre><code>Image Size: 640 x 800
Input Radius: 7.0
Operating System: iOS 9

Device: iPhone 5s / FPS: 60
Device: iPhone 5  / FPS: ~24
</code></pre>

<h2><a id="user-content-concepts" class="anchor" href="#concepts" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Concepts</h2>

<p>The basic routine of <code>YUCIHighPassSkinSmoothing</code> can be described with the following diagram.</p>

<p><a href="http://yuao.github.io/YUCIHighPassSkinSmoothing/docs/filter-routine.jpg"><img src="https://camo.githubusercontent.com/68e6f8025f6d8c20a0fa13601b5f1a562c2f700f/687474703a2f2f7975616f2e6769746875622e696f2f595543494869676850617373536b696e536d6f6f7468696e672f646f63732f66696c7465722d726f7574696e652e6a7067" alt="Routine" data-canonical-src="http://yuao.github.io/YUCIHighPassSkinSmoothing/docs/filter-routine.jpg" style="max-width:100%;"></a></p>

<h4><a id="user-content-basic-concept" class="anchor" href="#basic-concept" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Basic Concept</h4>

<p>The main theory behind <code>High Pass Skin Smoothing</code> is <code>Frequency Separation</code>.</p>

<p>Frequency separation splits up the tones and colors of a image from its more detailed textures. It is possible because a digital image can be interpreted as different frequencies represented as sine waves.</p>

<blockquote>
<p>High frequencies in an image will contain information about fine details, such as skin pores, hair, fine lines, skin imperfections.</p>

<p>Low frequencies are the image data that contains information about volume, tone and color transitions. In other words: shadows and light areas, colors and tones.</p>

<p><a href="https://fstoppers.com/post-production/ultimate-guide-frequency-separation-technique-8699">https://fstoppers.com/post-production/ultimate-guide-frequency-separation-technique-8699</a></p>
</blockquote>

<p>By using <a href="https://en.wikipedia.org/wiki/High-pass_filter">High Pass</a> filter, the image can be separated into high and low spatial frequencies. Then we will be able to smoothing the image while preseving a fine level of detail by applying adjustments (<code>Curve Adjustment</code> in the diagram) to certain frequencies of the image.</p>

<h4><a id="user-content-high-pass-filter" class="anchor" href="#high-pass-filter" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>High Pass Filter</h4>

<p>There's no <code>High Pass</code> filter in CoreImage. Luckily it's not hard to create one (<code>High Pass Filter</code> section in the diagram):</p>

<pre><code>highpass.rgb = image.rgb - gaussianBlurredImage.rgb + vec3(0.5,0.5,0.5)
</code></pre>

<h4><a id="user-content-mask-generating" class="anchor" href="#mask-generating" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Mask Generating</h4>

<p>A mask image is generated using high pass filter (Green and blue channel overlay blend -&gt; high pass -&gt; hard light blend X 3) for separating the parts of the image which need to be adjusted from the ones that should remain untouched.</p>

<p>This mask image is then used in <code>Blend with Mask (CIBlendWithMask)</code> filter to blend the adjusted image with the untouched one to produce the final output image.</p>

<h5><a id="user-content-improvements" class="anchor" href="#improvements" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Improvements</h5>

<p>Besides the steps in the diagram, <code>YUCIHighPassSkinSmoothing</code> actually has two more steps.</p>

<p>The exposure of the input image is decreased by 1 EV before being sent to the <code>Mask Generating Routine</code> (in <code>-[YUCIHighPassSkinSmoothingMaskGenerator outputImage]</code> method) and a RGB curve adjustment is added to the mask at the end of the <code>Mask Generating Routine</code> (at the end of <code>YUCIHighPassSkinSmoothingMaskBoost.cikernel</code>).</p>

<p>These steps can make the result better on the areas with high brightness. The whole process can of course work without these two steps.</p>

<h4><a id="user-content-input-parameters" class="anchor" href="#input-parameters" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Input Parameters</h4>

<p><code>inputAmount</code>: A number value that controls the intensity of the <code>Curve Adjustment</code> step and affects the sharpness of the final <code>Sharpen</code> step. You use this value to control the overall filter strength. Valid from <code>0</code> to <code>1.0</code>. The default value is <code>0.75</code>.</p>

<p><code>inputControlPoints</code>: A array of <code>CIVector</code> that defines the control points of the curve in <code>Curve Adjustment</code> step. The default value of this parameter is <code>[(0,0), (120/255.0,146/255.0), (1,1)]</code>.</p>

<p><code>inputRadius</code>: A number value that controls the radius (in pixel) of the <code>High Pass</code> filter. The default value of this parameter is <code>8.0</code>. Try adjusting this value according to the resolution of the input image and the level of detail you want to preserve.</p>

<p><code>inputSharpnessFactor</code>: A number value that controls the sharpness factor of the final <code>Sharpen</code> step. The sharpness value is calculated as <code>inputAmount * inputSharpnessFactor</code>. The default value for this parameter is <code>0.6</code>. <strong>Note:</strong> Sharpen is an expensive operation (it involves convolution). The final <code>Sharpen</code> step will make the output image look better, however it is not necessary. Consider setting this parameter to <code>0</code> when you need to get the best performance.</p>

<h2><a id="user-content-consideration" class="anchor" href="#consideration" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Consideration</h2>

<p>For the best result, you need to create the <code>CIContext</code> object with a sRGB working color space instead of the default light-linear color space. You can specify a working color space when creating a context using the <code>kCIContextWorkingColorSpace</code> key in the <code>options</code> dictionary.</p>

<p>You can also try to apply this filter only to the skin/face area of a image, by using a skin detection filter or the core image face detector.</p>

<h2><a id="user-content-requirements" class="anchor" href="#requirements" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Requirements</h2>

<ul>
<li>iOS 8.0+ / OS X 10.11+</li>
<li>Xcode 7.0+</li>
</ul>

<h2><a id="user-content-usage" class="anchor" href="#usage" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Usage</h2>

<p>Use the <code>YUCIHighPassSkinSmoothing</code>, like any other built in core image filters.</p>

<p>Documentation for the input parameters can be found <a href="#input-parameters">here</a>.</p>

<div class="highlight highlight-source-swift"><pre><span class="pl-k">let</span> filter <span class="pl-k">=</span> YUCIHighPassSkinSmoothing()
filter<span class="pl-k">.</span>inputImage <span class="pl-k">=</span> <span class="pl-k">...</span>
filter<span class="pl-k">.</span>inputAmount <span class="pl-k">=</span> <span class="pl-k">...</span>
<span class="pl-k">let</span> outputImage <span class="pl-k">=</span> filter<span class="pl-k">.</span>outputImage<span class="pl-k">!</span>

<span class="pl-c">/* Or */</span>

<span class="pl-k">let</span> filter <span class="pl-k">=</span> CIFilter(name: <span class="pl-s"><span class="pl-pds">"</span>YUCIHighPassSkinSmoothing<span class="pl-pds">"</span></span>)<span class="pl-k">!</span>
filter<span class="pl-k">.</span>setValue(inputImage, forKey: kCIInputImageKey)
filter<span class="pl-k">.</span>setValue(<span class="pl-c1">0</span><span class="pl-k">.</span><span class="pl-c1">7</span>, forKey: <span class="pl-s"><span class="pl-pds">"</span>inputAmount<span class="pl-pds">"</span></span>)
<span class="pl-k">let</span> outputImage <span class="pl-k">=</span> filter<span class="pl-k">.</span>outputImage<span class="pl-k">!</span></pre></div>

<p>Open <code>YUCIHighPassSkinSmoothingDemo/YUCIHighPassSkinSmoothingDemo.xcworkspace</code> to run the iOS demo app. The demo app demonstrated how to use the filter and how to use different kinds of core image context to render the output image. The <code>Metal</code> core image context is only available on 64-bit devices with iOS 9.</p>

<p><strong>Please run the demo app on an actual device.</strong> The iOS simulator does not provide a pixel-accurate match to the graphics hardware. Rendering performance of OpenGL ES in Simulator has no relation to the performance of OpenGL ES on an actual device.</p>

<h2><a id="user-content-installation" class="anchor" href="#installation" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Installation</h2>

<p><code>YUCIHighPassSkinSmoothing</code> makes use of <a href="https://github.com/YuAo/Vivid">Vivid</a>.</p>

<h4><a id="user-content-cocoapods" class="anchor" href="#cocoapods" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>CocoaPods</h4>

<p>Add the following to your <code>Podfile</code></p>

<pre><code>pod 'YUCIHighPassSkinSmoothing'
</code></pre>

<h4><a id="user-content-manually" class="anchor" href="#manually" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Manually</h4>

<p>Clone this repo <strong>and</strong> <a href="https://github.com/YuAo/Vivid">Vivid</a>, then manually add the files in <code>Sources</code> directories to your project.</p>

<h2><a id="user-content-contributing" class="anchor" href="#contributing" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Contributing</h2>

<p>You are encouraged to try different input parameters or tweak the interal procedure to make this filter better or just fit your needs.</p>

<p>Don't hesitate to open an issue if you have any idea or suggestion.</p>

<p>If you find a bug and know exactly how to fix it, please open a pull request. Be sure to test the code on both OS X and iOS.</p>

<h2><a id="user-content-credits" class="anchor" href="#credits" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>Credits</h2>

<p>Thanks a lot to <a href="https://dribbble.com/yien">Yien Ma</a> for providing a lot of suggestions and fine-tunings to the procedure.</p>

<h2><a id="user-content-gpuimage-port" class="anchor" href="#gpuimage-port" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>GPUImage Port</h2>

<p>A <a href="https://github.com/BradLarson/GPUImage">GPUImage</a> based version can be found here: <a href="https://github.com/YuAo/YUGPUImageHighPassSkinSmoothing">YUGPUImageHighPassSkinSmoothing</a></p>

<h2><a id="user-content-license" class="anchor" href="#license" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"></path></svg></a>License</h2>

<p>YUCIHighPassSkinSmoothing is MIT-licensed. See <a href="https://github.com/YuAo/YUCIHighPassSkinSmoothing/blob/master/LICENSE">LICENSE</a> file for detail.</p>

<p>Copyright © 2016 <a href="https://yuao.me">Yu Ao</a></p>
</article></div>